# #################################################################################################################
# GitHub workflow action file
# Tests that the Sphinx documentation files build successfully
# #################################################################################################################

# Name for workflow (also displayed on the associated badges)
name: docs-files

# on: controls when the action will run. Triggers the workflow on push or pull request events
# Limits run only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Set environment variables so this workflow action is easy to re-use in other repos
env:
  REPO_NAME: cmatools
  CONDA_ENV: cmatools-docs-env # Name is set in the $ENV_FILE
  ENV_FILE: environment_docs.yml
  DISPATCH_NAME: docs-build-true # Name to use for dispatch event type

jobs:
  docs-build:
    timeout-minutes: 5 # Limit total time use of the workflow action, in case of problems
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 # checkout code to the runner workspace root
    - name: Install dependencies
      run: |
        conda update conda
        conda env create -f $ENV_FILE
    - name: conda check
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $CONDA_ENV
        which python
        python --version
        conda info --envs
        conda info
    - name: Install package
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $CONDA_ENV
        pip  install .
    - name: Test Sphinx docs build
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $CONDA_ENV
        cd scripts/docs
        chmod +x build-sphinx-docs.sh
        ./build-sphinx-docs.sh
    - name: Format event type name
      id: event
      run: |
        # Format the dispatch event type name as json ready for data body in curl
        echo ::set-output name=event::$(echo $'\''{"$EVENT_NAME"}$'\'')
      env:
        EVENT_NAME: '"event_type":"${{ env. DISPATCH_NAME }}"'
    - name: Create a repo level dispatches event
      # Dispatch event will only be created if the rest of the steps have completed first
      run: |
        curl -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        -u ${{ secrets.ACCESS_TOKEN }} \
        https://api.github.com/repos/cma-open/cmatools/dispatches \
        -d ${{ steps.event.outputs.event }}
        # Steps outputs are used to format the json data body